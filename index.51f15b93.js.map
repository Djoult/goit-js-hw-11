{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAMMC,EAAaC,SAASC,cAAc,gBACpCC,EAAUF,SAASC,cAAc,YACjCE,EAAUH,SAASC,cAAc,cAEvCF,EAAWK,iBAAiB,U,SAOAC,G,OAAbC,EAAYC,MAAAC,KAAAC,U,IAN3BN,EAAQC,iBAAiB,S,kBAiEVM,EAAcH,MAAAC,KAAAC,U,IA/D7B,IAAIE,EAAiB,KACjBC,EAAc,KACdC,EAAO,E,SAEIP,I,OAAAA,EAAfQ,EAAAjB,EAAA,CAAAiB,EAAAC,GAAAC,MAAA,SAAAC,EAA4BZ,G,IAkBpBa,EAHIC,EACKC,E,qEAfff,EAAEgB,iBACFT,EAAcP,EAAEiB,OAAOC,SAASC,YAAYC,MAAMC,OAClDb,EAAO,EACPc,IACoB,KAAhBf,EAAkB,C,sBACpBb,EAAW6B,QACXzB,EAAQ0B,UAAUC,IAAI,aACtBhB,EAAAiB,GAASC,OAAOC,QAAQ,0BAA2B,CACjDC,cAAc,I,qDASN,EAAAC,EAAAC,eAAcxB,EAAaC,G,WAAjCK,EAAsCmB,EAAAC,KAHxCnB,EAGED,EAHFqB,KACAnB,EAEEF,EAFFsB,UAGe,IADbtB,EADFuB,MAEgB,C,uBAChB3B,EAAAiB,GAASC,OAAOU,QACd,2EACA,CACER,cAAc,I,8BAKpBpB,EAAAiB,GAASC,OAAOW,QAAQ,oBAAkCC,OAAdxB,EAAc,YAAW,CACnEc,cAAc,IAEhBW,EAAY1B,GACZR,EAAiB,IAAIG,EAAAgC,GAAJ,CAAmB,aAAc,CAEhDC,QAAS,CAAC,UAAW,WAErBC,UAAW,UACXC,aAAa,MAEX7B,EAAuB,GAAPP,GAAS,C,uBAC3BV,EAAQ0B,UAAUC,IAAI,aACtBhB,EAAAiB,GAASC,OAAOC,QACd,6DACA,CAAEC,cAAc,IAElBgB,I,2BAGF/C,EAAQ0B,UAAUsB,OAAO,a,kDAEzBrC,EAAAiB,GAASC,OAAOU,QAAQ,2B,QAM1BU,QAAQC,IAAIzC,G,2DAxDaL,MAAAC,KAAAC,U,UA2DZC,I,OAAAA,EAAfI,EAAAjB,EAAA,CAAAiB,EAAAC,GAAAC,MAAA,SAAAC,I,IAOQC,EAHIC,EACKC,E,yEAJfP,GAAQ,E,mBAMI,EAAAsB,EAAAC,eAAcxB,EAAaC,G,UAAjCK,EAAsCmB,EAAAC,KAHxCnB,EAGED,EAHFqB,KACAnB,EAEEF,EAFFsB,UAEEtB,EADFuB,MAEFI,EAAY1B,GACZR,EAAe2C,UACfC,MAEInC,EAAuB,GAAPP,GAAS,C,uBAC3BV,EAAQ0B,UAAUC,IAAI,aACtBoB,I,6EAIFE,QAAQC,IAAGhB,EAAAmB,IACX1C,EAAAiB,GAASC,OAAOU,QAAQ,2B,2DAnBCnC,MAAAC,KAAAC,U,CAyB7B,SAASyC,IACPhD,EAAQuD,mBACN,YACC,kE,CAQL,SAASZ,EAAYa,GACnBA,EAAKC,KACH,SAAAC,G,IACEC,EAAYD,EAAZC,aACAC,EAAaF,EAAbE,cACAC,EAAIH,EAAJG,KACAC,EAAKJ,EAALI,MACAC,EAAKL,EAALK,MACAC,EAAQN,EAARM,SACAC,EAASP,EAATO,UAEAjE,EAAQuD,mBACN,YACA,sBAGgBb,OAFLkB,EAAc,kEAEalB,OAAtBiB,EAAa,WAInBjB,OAJ4BmB,EAAK,4IAQjCnB,OAJAoB,EAAM,6GAQNpB,OAJAqB,EAAM,gHAQNrB,OAJAsB,EAAS,iHAICtB,OAAVuB,EAAU,sF,IAW5B,SAASZ,IACP,IAAQa,EACNlE,EAAQmE,kBAAkBC,wBADpBC,OAGRC,OAAOC,SAAS,CACdC,IAAkB,EAAbN,EACLO,SAAU,U,CAId,SAAShD,IACPzB,EAAQ0E,UAAY,E","sources":["src/index.js"],"sourcesContent":["import './css/styles.css';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { fetchPictures } from './js/fetch-pictures';\n\nconst searchForm = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nconst loadBtn = document.querySelector('.load-more');\n\nsearchForm.addEventListener('submit', handleSearch);\nloadBtn.addEventListener('click', handleLoadMore);\n\nlet simpleLightbox = null;\nlet searchQuery = null;\nlet page = 1;\n\nasync function handleSearch(e) {\n  e.preventDefault();\n  searchQuery = e.target.elements.searchQuery.value.trim();\n  page = 1;\n  ClearMarkUp();\n  if (searchQuery === '') {\n    searchForm.reset();\n    loadBtn.classList.add('is-hidden');\n    Notiflix.Notify.warning('Please, enter a request', {\n      clickToClose: true,\n    });\n    return;\n  }\n  try {\n    const {\n      hits: pictures,\n      totalHits: totalQuantity,\n      total: quantity,\n    } = await fetchPictures(searchQuery, page);\n    if (quantity === 0) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.',\n        {\n          clickToClose: true,\n        }\n      );\n      return;\n    }\n    Notiflix.Notify.success(`Hooray! We found ${totalQuantity} images.`, {\n      clickToClose: true,\n    });\n    createCards(pictures);\n    simpleLightbox = new SimpleLightbox('.gallery a', {\n      // navText: ['&#11178;', '&#11179;'],\n      navText: ['&#8656;', '&#8658;'],\n      //   closeText: \"&#10015;\", краще не розкоментовувати :)\n      closeText: '&#10803',\n      showCounter: false,\n    });\n    if (totalQuantity < page * 40) {\n      loadBtn.classList.add('is-hidden');\n      Notiflix.Notify.warning(\n        \"We're sorry, but you've reached the end of search results.\",\n        { clickToClose: true }\n      );\n      createEndMessage();\n      return;\n    }\n    loadBtn.classList.remove('is-hidden');\n  } catch {\n    Notiflix.Notify.failure('Please try again later.'),\n      {\n        clickToClose: true,\n      };\n  }\n\n  console.log(searchQuery);\n}\n\nasync function handleLoadMore() {\n  page += 1;\n  try {\n    const {\n      hits: pictures,\n      totalHits: totalQuantity,\n      total: quantity,\n    } = await fetchPictures(searchQuery, page);\n    createCards(pictures);\n    simpleLightbox.refresh();\n    autoScrollPage();\n\n    if (totalQuantity < page * 40) {\n      loadBtn.classList.add('is-hidden');\n      createEndMessage();\n      return;\n    }\n  } catch (err) {\n    console.log(err);\n    Notiflix.Notify.failure('Please try again later.'),\n      {\n        clickToClose: true,\n      };\n  }\n}\nfunction createEndMessage() {\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    `\n    <p class=\"end-message\">\n      The end :)\n    </p>\n    `\n  );\n}\n\nfunction createCards(data) {\n  data.map(\n    ({\n      webformatURL,\n      largeImageURL,\n      tags,\n      likes,\n      views,\n      comments,\n      downloads,\n    }) => {\n      gallery.insertAdjacentHTML(\n        'beforeend',\n        `\n        <a href=\"${largeImageURL}\">\n          <div class=\"photo-card\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n            <div class=\"info\">\n              <p class=\"info-item\">\n                <b>Likes</b>\n                ${likes}\n              </p>\n              <p class=\"info-item\">\n                <b>Views</b>\n                ${views}\n              </p>\n              <p class=\"info-item\">\n                <b>Comments</b>\n                ${comments}\n              </p>\n              <p class=\"info-item\">\n                <b>Downloads</b>\n                ${downloads}\n              </p>\n            </div>\n          </div>\n        </a>\n        `\n      );\n    }\n  );\n}\n\nfunction autoScrollPage() {\n  const { height: cardHeight } =\n    gallery.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nfunction ClearMarkUp() {\n  gallery.innerHTML = '';\n}\n"],"names":["$bpxeT","parcelRequire","$b8f9b7833fa37166$var$searchForm","document","querySelector","$b8f9b7833fa37166$var$gallery","$b8f9b7833fa37166$var$loadBtn","addEventListener","e","$b8f9b7833fa37166$var$_handleSearch","apply","this","arguments","$b8f9b7833fa37166$var$_handleLoadMore","$b8f9b7833fa37166$var$simpleLightbox","$b8f9b7833fa37166$var$searchQuery","$b8f9b7833fa37166$var$page","$parcel$interopDefault","$2TvXO","mark","_callee","ref","pictures","totalQuantity","preventDefault","target","elements","searchQuery","value","trim","$b8f9b7833fa37166$var$ClearMarkUp","reset","classList","add","$6JpON","Notify","warning","clickToClose","$gouQe","fetchPictures","_ctx","sent","hits","totalHits","total","failure","success","concat","$b8f9b7833fa37166$var$createCards","$5IjG7","navText","closeText","showCounter","$b8f9b7833fa37166$var$createEndMessage","remove","console","log","refresh","$b8f9b7833fa37166$var$autoScrollPage","t0","insertAdjacentHTML","data","map","param","webformatURL","largeImageURL","tags","likes","views","comments","downloads","cardHeight","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","innerHTML"],"version":3,"file":"index.51f15b93.js.map"}